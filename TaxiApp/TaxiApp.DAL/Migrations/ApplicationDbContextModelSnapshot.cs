// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaxiApp.DAL;

#nullable disable

namespace TaxiApp.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TaxiApp.DAL.Abstractions.Entities.CarEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK_CarId");

                    b.ToTable("Car", (string)null);
                });

            modelBuilder.Entity("TaxiApp.DAL.Abstractions.Entities.ClientEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK_ClientId");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("TaxiApp.DAL.Abstractions.Entities.DriverEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Patronymic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasDefaultValue("Inactive");

                    b.Property<int>("TariffId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_DriverId");

                    b.HasIndex("CarId");

                    b.HasIndex("TariffId");

                    b.ToTable("Driver", (string)null);
                });

            modelBuilder.Entity("TaxiApp.DAL.Abstractions.Entities.OrderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CompleatedAt")
                        .HasColumnType("date");

                    b.Property<decimal>("Cost")
                        .HasColumnType("money");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<int>("DriverId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_OrderId");

                    b.HasIndex("ClientId");

                    b.HasIndex("DriverId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("TaxiApp.DAL.Abstractions.Entities.TariffEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal>("StartingPrice")
                        .HasColumnType("money");

                    b.HasKey("Id")
                        .HasName("PK_TariffId");

                    b.ToTable("Tariff", (string)null);
                });

            modelBuilder.Entity("TaxiApp.DAL.Abstractions.Entities.UserEntity", b =>
                {
                    b.Property<string>("Login")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varbinary(32)")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Login")
                        .HasName("PK_UserLogin");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("TaxiApp.DAL.Abstractions.Entities.DriverEntity", b =>
                {
                    b.HasOne("TaxiApp.DAL.Abstractions.Entities.CarEntity", "Car")
                        .WithMany("Drivers")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DriverCarId_CarId");

                    b.HasOne("TaxiApp.DAL.Abstractions.Entities.TariffEntity", "Tariff")
                        .WithMany("Drivers")
                        .HasForeignKey("TariffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DriverTariffId_TariffId");

                    b.Navigation("Car");

                    b.Navigation("Tariff");
                });

            modelBuilder.Entity("TaxiApp.DAL.Abstractions.Entities.OrderEntity", b =>
                {
                    b.HasOne("TaxiApp.DAL.Abstractions.Entities.ClientEntity", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OrderClientId_ClientId");

                    b.HasOne("TaxiApp.DAL.Abstractions.Entities.DriverEntity", "Driver")
                        .WithMany("Orders")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OrderDriverId_DriverId");

                    b.Navigation("Client");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("TaxiApp.DAL.Abstractions.Entities.CarEntity", b =>
                {
                    b.Navigation("Drivers");
                });

            modelBuilder.Entity("TaxiApp.DAL.Abstractions.Entities.ClientEntity", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TaxiApp.DAL.Abstractions.Entities.DriverEntity", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TaxiApp.DAL.Abstractions.Entities.TariffEntity", b =>
                {
                    b.Navigation("Drivers");
                });
#pragma warning restore 612, 618
        }
    }
}
