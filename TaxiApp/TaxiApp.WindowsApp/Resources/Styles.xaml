<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:TaxiApp.WindowsApp.Controls"
                    xmlns:images="clr-namespace:TaxiApp.WindowsApp.Images"
                    xmlns:components="clr-namespace:TaxiApp.WindowsApp.Components"
                    xmlns:local="clr-namespace:TaxiApp.WindowsApp">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/TaxiApp.WindowsApp;component/Resources/Variables.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DesignStyle" 
           TargetType="Control">
        <Setter Property="Background" Value="{DynamicResource BrushBackground}"/>
        <Setter Property="Width" Value="{StaticResource AppWidth}"/>
        <Setter Property="Height" Value="{StaticResource AppHeight}"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="pack://application:,,,/TaxiApp.WindowsApp;component/Fonts/#SF Pro Display"/>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="FontFamily" Value="pack://application:,,,/TaxiApp.WindowsApp;component/Fonts/#SF Pro Display"/>
        <Setter Property="Foreground" Value="{DynamicResource BrushText}"/>
    </Style>

    <Style TargetType="Label">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource BrushText}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{DynamicResource BrushTextSecondary}"/>
    </Style>

    <Style TargetType="ListView">
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="Loader">
        <Setter Property="LoaderContent">
            <Setter.Value>
                <images:Logo/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Header1" 
           TargetType="Label" 
           BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="FontSize" Value="40"/>
    </Style>

    <Style x:Key="Header2"
           TargetType="Label" 
           BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="FontSize" Value="30"/>
    </Style>

    <Style x:Key="Header3"
           TargetType="Label" 
           BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="FontSize" Value="21"/>
    </Style>

    <Style x:Key="ClearTextBox"
           TargetType="TextBox"
           BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <ScrollViewer x:Name="PART_ContentHost"
                                  Margin="0"
                                  Padding="0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UnderlinedTextBox"
           TargetType="TextBox"
           BasedOn="{StaticResource ClearTextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <ExtendedGrid Rows="auto,[8],auto"
                                  AutoPositioning="True">
                    
                        <ScrollViewer x:Name="PART_ContentHost"
                                        Margin="0"
                                        Padding="0"/>

                        <Border BorderThickness="0 0 0 1"
                                BorderBrush="{DynamicResource BrushForeground}"/>
                    </ExtendedGrid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrimaryButton"
           TargetType="Button"
           BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            CornerRadius="10"
                            Padding="12"
                            Background="{DynamicResource BrushBackgroundSecondary}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                    <VisualTransition GeneratedDuration="0" To="Pressed"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                                      Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource ColorBackgroundSecondaryMedium}"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                                      Storyboard.TargetName="Border">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{DynamicResource ColorBackgroundSecondaryLight}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="{DynamicResource BrushForegroundSecondary}"/>
    </Style>

    <Style x:Key="ClearButton"
           TargetType="Button"
           BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                          RecognizesAccessKey="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="AnimatedScrollViewer"
           BasedOn="{StaticResource {x:Type AnimatedScrollViewer}}">
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
    </Style>

    <Style x:Key="BigField"
           TargetType="controls:Field">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:Field">
                    <ExtendedGrid Rows="auto,[5],auto"
                                  AutoPositioning="True">
                        <Label FontSize="20">
                            <TextBlock>
                                <Run Text="{TemplateBinding Label}"/>:
                            </TextBlock>
                        </Label>

                        <TextBox Style="{StaticResource UnderlinedTextBox}"
                                 Text="{Binding Text, RelativeSource={RelativeSource Mode=TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                 TextWrapping="Wrap"
                                 AcceptsReturn="True"
                                 MinLines="4"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"/>
                    </ExtendedGrid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:PlaceholderInput">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:PlaceholderInput">
                    <ExtendedGrid>
                        <TextBox x:Name="PART_Input"
                                 Style="{StaticResource ClearTextBox}"
                                 FontSize="13"
                                 Text="{Binding Text, RelativeSource={RelativeSource Mode=TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Content="{TemplateBinding Placeholder}"
                               FontSize="13"
                               Foreground="{DynamicResource BrushForegroundLight}"
                               IsHitTestVisible="False"
                               Margin="1 0 0 0"
                               Visibility="{TemplateBinding PlaceholderVisibility}"/>
                    </ExtendedGrid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:Input">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:Input">
                    <ExtendedGrid Rows="auto,[12],auto,[8],auto"
                                  AutoPositioning="True">
                        <Label Content="{TemplateBinding Placeholder}"
                               Style="{StaticResource Header3}"/>

                        <controls:PlaceholderInput Placeholder="{TemplateBinding Placeholder}"
                                                   Text="{Binding Text, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>

                        <Border BorderThickness="0 0 0 1"
                                BorderBrush="{DynamicResource BrushForeground}"/>
                    </ExtendedGrid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:SearchInput">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:SearchInput">
                    <Border BorderThickness="1"
                            BorderBrush="{DynamicResource BrushBorderSecondary}"
                            CornerRadius="10"
                            Padding="13">
                        <ExtendedGrid Columns="*,auto"
                                      AutoPositioning="True">
                            <controls:PlaceholderInput Placeholder="{TemplateBinding Placeholder}"
                                                       VerticalAlignment="Center"
                                                       Text="{Binding Text, RelativeSource={RelativeSource Mode=TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"/>

                            <Button Style="{StaticResource ClearButton}">
                                <images:Search/>
                            </Button>
                        </ExtendedGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:InfoTile">
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:InfoTile">
                    <Border CornerRadius="10"
                            Padding="{TemplateBinding Padding}"
                            Background="{DynamicResource BrushBackgroundSecondary}">
                        <ContentPresenter TextBlock.FontSize="13"
                                          TextBlock.Foreground="{DynamicResource BrushForegroundSecondary}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:PageTemplate">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:PageTemplate">
                    <ExtendedGrid Rows="auto,auto,[18],*"
                                  AutoPositioning="True">
                        <components:NavigationComponent/>

                        <Label Content="{TemplateBinding Title}"
                               Style="{StaticResource Header2}"
                               HorizontalAlignment="Center"/>

                        <ContentPresenter/>
                    </ExtendedGrid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:TariffButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:TariffButton">
                    <Button Style="{StaticResource PrimaryButton}"
                            Command="{TemplateBinding Command}"
                            CommandParameter="{TemplateBinding CommandParameter}">
                        <ExtendedGrid Rows="auto,[17],auto"
                                      AutoPositioning="True"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center">
                            <ContentControl Width="80"
                                            Height="80"
                                            ContentTemplate="{TemplateBinding ImageTemplate}"/>
                            <Label Content="{TemplateBinding Title}"
                                   FontSize="16"
                                   Foreground="{DynamicResource BrushForegroundSecondary}"
                                   HorizontalContentAlignment="Center"/>
                        </ExtendedGrid>
                    </Button>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ImageTemplate">
            <Setter.Value>
                <DataTemplate>
                    <images:Tariff/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:Field">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:Field">
                    <ExtendedGrid Columns="auto,[5],*"
                                  AutoPositioning="True">
                        <Label FontSize="20">
                            <TextBlock>
                                <Run Text="{TemplateBinding Label}"/>:
                            </TextBlock>
                        </Label>

                        <TextBox Style="{StaticResource UnderlinedTextBox}"
                                 Text="{Binding Text, RelativeSource={RelativeSource Mode=TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"/>
                    </ExtendedGrid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:List">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:List">
                    <ExtendedGrid Rows="auto,[10],*"
                                  AutoPositioning="True">
                        <controls:SearchInput Placeholder="{TemplateBinding SearchPlaceholder}"
                                              Text="{Binding SearchText, RelativeSource={RelativeSource Mode=TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"/>

                        <AnimatedScrollViewer VerticalScrollBarVisibility="Hidden"
                                              HorizontalScrollBarVisibility="Disabled">
                            <ExtendedGrid Rows="*,auto"
                                          AutoPositioning="True">
                                <ItemsControl ItemsSource="{TemplateBinding ItemsSource}">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Button Style="{StaticResource ClearButton}"
                                                    Command="{Binding Command, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:List}}"
                                                    CommandParameter="{Binding}">
                                                <ExtendedGrid Rows="[32],auto,[24],auto,[32],auto"
                                                              AutoPositioning="True">
                                                    <ExtendedGrid Columns="*,auto"
                                                                  AutoPositioning="True">
                                                        <Label FontSize="24">
                                                            <ContentPresenter ContentTemplate="{Binding TitleTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:List}}"
                                                                              DataContext="{Binding}"/>
                                                        </Label>
                                                    </ExtendedGrid>

                                                    <AnimatedScrollViewer VerticalScrollBarVisibility="Disabled"
                                                                          HorizontalScrollBarVisibility="Hidden">
                                                        <ContentPresenter ContentTemplate="{Binding ItemInfoTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:List}}"
                                                                          DataContext="{Binding}"/>
                                                    </AnimatedScrollViewer>

                                                    <Border BorderThickness="0 0 0 1"
                                                            BorderBrush="{DynamicResource BrushBorderSecondary}"/>
                                                </ExtendedGrid>
                                            </Button>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>

                                <components:SettingsComponent/>
                            </ExtendedGrid>
                        </AnimatedScrollViewer>
                    </ExtendedGrid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>